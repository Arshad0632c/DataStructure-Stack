SOURCE CODE:
#include <iostream>
using namespace std;
struct Node {
int data;
Node* next;
};
Node* head = NULL; 
bool isEmpty() {
return head == NULL;
}
void push(int new_data) {
Node* newNode = new Node(); 
newNode->data = new_data;
newNode->next = head;
head = newNode;
}
void pop() {
if (isEmpty()) {
cout << "Stack Underflow\n";
return;
}
Node* temp = head;
head = head->next;
delete temp; 
}
void peek() {
if (isEmpty())
cout << "Stack is empty\n";
else
cout << "Top element: " << head->data << endl;
}
void display() {
if (isEmpty()) {
cout << "Stack is empty\n";
return;
}
Node* temp = head;
cout << "Stack elements: ";
while (temp != NULL) {
cout << temp->data << " ";
temp = temp->next;
}
cout << endl;
}
int main() {
int choice, value;
while (true) {
cout << "\n--- STACK MENU ---\n";
cout << "1. Push\n";
cout << "2. Pop\n";
cout << "3. Peek\n";
cout << "4. Display\n";
cout << "5. Exit\n";
cout << "Enter your choice: ";
cin >> choice;
switch (choice) {
case 1:
cout << "Enter value to push: ";
cin >> value;
push(value);
break;
case 2:
pop();
break;
case 3:
peek();
break;
case 4:
display();
break;
case 5:
cout << "Exiting program...\n";
exit(0);
default:
cout << "Invalid choice! Try again.\n";
}}return 0;
}

